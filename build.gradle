buildscript {
    repositories {
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

version = "b5"
group = "me.jameesyy"
archivesBaseName = "slant"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    clientJvmArgs += '-Dfml.coreMods.load=me.jameesyy.slant.mixins.MixinLoader'
}

mixin {
    defaultObfuscationEnv = "searge"
    add sourceSets.main, "mixins.slant.refmap.json"
}

configurations {
    embed
    compile.extendsFrom embed
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'essential'
        url = "https://repo.essential.gg/repository/maven-public"
    }
}

dependencies {
    embed('org.spongepowered:mixin:0.6-SNAPSHOT')
    implementation('org.jetbrains:annotations:24.0.1')
    shade("gg.essential:vigilance:$vigilanceVersion")
    shade("gg.essential:universalcraft-$mcVersion-$mcPlatform:$universalCraftVersion")
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    dependsOn configurations.embed
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) })
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'MixinConfigs': 'mixins.slant.json',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "ForceLoadAsMod": true,
                'FMLCorePluginContainsFMLMod': true,
        )
    }
}

shadowJar {
    configurations = [project.configurations.shade, project.configurations.embed]
    classifier = ''

    relocate 'gg.essential.vigilance', 'me.jameesyy.slant.vigilance'
    relocate 'gg.essential.elementa', 'me.jameesyy.slant.elementa'
    relocate 'gg.essential.universalcraft', 'me.jameesyy.slant.universalcraft'

    // Exclude problematic files
    exclude 'module-info.class'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/LICENSE*'
    exclude 'META-INF/NOTICE*'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/com.android.tools/**'
}

reobf {
    shadowJar {
    }

}

tasks.build.dependsOn shadowJar

artifacts {
    archives shadowJar
}